ext.versions = [
        versionCode         : 1,
        versionName         : "1.0.0",
        minVersion          : 21,
        targetVersion       : 27,
        compileVersion      : 27,

        appId               : "co.uk.random",
        gradle              : "3.1.3",
        kotlinGradlePlugin  : "1.2.41",
        googleServices      : "3.2.0",
        realmGradlePlugin   : "4.1.1",

        //android lib
        supportLibrary      : "27.1.1",
        constraintLayout    : "2.0.0-alpha1",
        kotlin              : "1.2.41",
        multiDex            : "1.0.3",
        firebase            : "16.0.0",
        lifecycle           : "1.1.1",
        junit               : "4.12",
        room                : "1.1.0",
        paging              : "1.0.0",
        mlLabel             : "15.0.0",
        androidPluginVersion: "3.1.3",

        //third party
        mockitoInline       : "2.11.0",
        rxandroid           : "2.0.1",
        rxkotlin            : "2.1.0",
        retrofitRx          : "1.0.0",
        gson                : "2.8.1",
        dagger              : "2.14.1",
        retrofitVersion     : "2.3.0",
        okhttp              : "3.9.0",
        realm               : "4.1.1",
        picasso             : "2.5.2",
        annotation          : "10.0-b28"
]

ext.classpaths = [
        gradle        : "com.android.tools.build:gradle:$versions.gradle",
        gradleKotlin  : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlinGradlePlugin",
        googleServices: "com.google.gms:google-services:$versions.googleServices",
        realm         : "io.realm:realm-gradle-plugin:$versions.realmGradlePlugin"
]
ext.files = [
        files: fileTree(dir: 'libs', include: ['*.jar'])
]
ext.local = [
        tensorflow: project(':tensorflow'),
        mlkit     : project(':mlkit'),
        receipts  : project(':receipts'),
        youtube   : project(':youtube')
]

ext.androidLib = [
        kotlin       : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",
        kotlinAndroid: "org.jetbrains.kotlin:kotlin-android-extensions-runtime:$versions.kotlin",
        appcompat    : "com.android.support:appcompat-v7:$versions.supportLibrary",
        support4     : "com.android.support:support-v4:$versions.supportLibrary",
        design       : "com.android.support:design:$versions.supportLibrary",
        cardview     : "com.android.support:cardview-v7:$versions.supportLibrary",
        recyclerview : "com.android.support:recyclerview-v7:$versions.supportLibrary",
        constraint   : "com.android.support.constraint:constraint-layout:$versions.constraintLayout",
        multidex     : "com.android.support:multidex:$versions.multiDex",
        firebase     : "com.google.firebase:firebase-core:$versions.firebase"
]

ext.archComponent = [
        lifecycleRuntime  : "android.arch.lifecycle:runtime:$versions.lifecycle",
        lifecycleExt      : "android.arch.lifecycle:extensions:$versions.lifecycle",
        roomRuntime       : "android.arch.persistence.room:runtime:$versions.room",
        paging            : "android.arch.paging:runtime:$versions.paging",
        supportAnnotations: "com.android.support:support-annotations:$versions.supportLibrary"
]

ext.archKapt = [
        roomKapt: "android.arch.persistence.room:compiler:$versions.room",
]

ext.rxjava = [
        rxandroid: "io.reactivex.rxjava2:rxandroid:$versions.rxandroid",
        rxkotlin : "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"
]

ext.network = [
        retrofit        : "com.squareup.retrofit2:retrofit:$versions.retrofitVersion",
        converterGson   : "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion",
        retrofit2Rxjava2: "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$versions.retrofitRx",
        okhttp3         : "com.squareup.okhttp3:logging-interceptor:$versions.okhttp",
        gson            : "com.google.code.gson:gson:$versions.gson"
]

ext.dagger = [
        dagger             : "com.google.dagger:dagger:$versions.dagger",
        daggerAndroid      : "com.google.dagger:dagger-android:$versions.dagger",
        daggerAdroidSupport: "com.google.dagger:dagger-android-support:$versions.dagger"
]

ext.daggerKapt = [
        daggerKapt       : "com.google.dagger:dagger-compiler:$versions.dagger",
        daggerAndroidKapt: "com.google.dagger:dagger-android-processor:$versions.dagger",
]

ext.daggerCompileOnly = [
        glassfishCompileOnly: "org.glassfish:javax.annotation:$versions.annotation"
]

ext.picasso = [
        picasso: "com.squareup.picasso:picasso:$versions.picasso"
]

ext.test = [
        junitTestImplementation  : "junit:junit:$versions.junit",
        mockitoTestImplementation: "org.mockito:mockito-inline:$versions.mockitoInline"
]

ext.testKapt = [
        daggerKaptTest: "com.google.dagger:dagger-compiler:$versions.dagger"
]

ext.mlkit = [
        firebaseML: "com.google.firebase:firebase-ml-vision:$versions.firebase",
        imageLabel: "com.google.firebase:firebase-ml-vision-image-label-model:$versions.mlLabel"
]

ext.dataBindingKapt = [
        dataBinding: "com.android.databinding:compiler:$versions.androidPluginVersion"
]